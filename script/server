#!/usr/bin/env ruby
require File.expand_path('../../config/boot',  __FILE__)

# Rails.env doesn't yet work here
if RAILS_ENV == "development" && ENV['BARE_SERVER'] != '1'
  dj = ENV["SCRIPT_SERVER_NO_JOBS"] != "1"
  if dj
    puts "Starting delayed jobs worker process. Pass SCRIPT_SERVER_NO_JOBS=1 to disable."
    fork {
      require(Rails.root+"config/environment.rb")
      Dir.chdir(Rails.root)
      Delayed::Pool.new(["run", "--no-tail"]).run
    }
  else
    puts "Not starting a delayed jobs worker process."
  end

  guard = ENV["SCRIPT_SERVER_NO_GUARD"] != "1"
  if guard
    puts "Starting guard. Pass SCRIPT_SERVER_NO_GUARD=1 to disable."
    Thread.new do
      require 'open3'
      guard_stdin, guard_stdout, guard_stderr = Open3.popen3('bundle exec guard')
      guard_stdin.puts "" # trigger rebuild

      Thread.new do
        # pass on any return keypress to guard in a way that doesn't interfere with ruby-debug
        line = STDIN.readline
        if line.chomp == ""
          guard_stdin.puts ""
        end
      end

      while line = guard_stderr.readline
        puts "GUARD: #{line}"
      end
    end
  else
    puts "Not starting guard."
  end

  if dj && guard
    puts "Pass BARE_SERVER=1 to disable both jobs and guard."
  end
end

require 'commands/server'
